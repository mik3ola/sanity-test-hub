name: Update Repository Statistics

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual triggering
  push:
    branches:
      - main  # Run on pushes to main branch
    paths-ignore:
      - 'dynamic-implementation-guide'  # Ignore pushes that only change config.js to avoid infinite loops

jobs:
  update-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Update repository statistics
        run: |
          python .github/scripts/update_stats.py
          
      - name: Commit and push changes to main
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          
          # Stage changes
          git add config.js
          
          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Pull latest changes with strategy to handle conflicts
            git pull --rebase origin main || git pull origin main
            
            # Commit changes
            git commit -m "Update repository statistics [skip ci]"
            
            # Push with retry logic
            MAX_RETRIES=3
            RETRY_COUNT=0
            
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              if git push; then
                echo "Successfully pushed changes"
                break
              else
                RETRY_COUNT=$((RETRY_COUNT+1))
                echo "Push failed, retry $RETRY_COUNT of $MAX_RETRIES"
                
                if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                  echo "Pulling latest changes before retrying..."
                  git pull --rebase origin main || git pull origin main
                  sleep 5
                fi
              fi
            done
            
            if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
              echo "Failed to push after $MAX_RETRIES attempts"
              exit 1
            fi
          fi

  deploy-pages:
    needs: update-stats
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      contents: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
